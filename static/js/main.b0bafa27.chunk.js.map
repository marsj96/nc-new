{"version":3,"sources":["contexts/User.jsx","utils/getUsers.js","components/Nav.jsx","utils/getArticles.js","components/Home.jsx","components/Header.jsx","utils/getComments.js","utils/patchArticleVotes.js","utils/postComment.js","components/Article.jsx","utils/getTopic.js","components/Topics.jsx","App.js","index.js"],"names":["UserContext","React","createContext","UserProvider","children","useState","user","setUser","loggedIn","setLoggedIn","Provider","value","newsAPI","axios","create","baseURL","Nav","users","setUsers","userInput","setUsersInput","inputError","setInputError","useContext","useEffect","get","then","res","data","handleSubmit","event","currentUser","preventDefault","forEach","singleUser","username","className","src","avatar_url","alt","to","style","textDecoration","color","onSubmit","type","width","onChange","target","Home","sortBy","setSortBy","articles","setArticles","order","setOrder","query","queryValue","toLowerCase","getArticles","returnedArticles","e","onClick","map","article","article_id","title","topic","body","slice","author","votes","created_at","Header","patchArticleVote","amount","patch","inc_votes","console","log","Article","singleArticle","setSingleArticle","postComment","setPostComment","cancelPost","setCancelPost","commentContent","setCommentContent","comments","setComment","setVotes","useParams","comment","id","returnedArticle","prevVote","post","prevValue","newComments","unshift","comment_id","Topics","filter","topics","setTopics","response","App","basename","process","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b0bafa27.chunk.js","sourcesContent":["import React from 'react'\nimport { useState } from 'react';\n\nexport const UserContext = React.createContext();\n\nexport const UserProvider = ({children}) => {\n\n    const [user, setUser] = useState(\"\")\n    const [loggedIn, setLoggedIn] = useState(false)\n\n    return (\n        <UserContext.Provider value={{user, setUser, loggedIn, setLoggedIn}}>\n            {children}\n        </UserContext.Provider>\n    )\n}","import axios from 'axios';\n\nconst newsAPI = axios.create({\n    baseURL: 'https://nc-news-reddit.herokuapp.com/api/',\n})\n\nexport const getUsers = () => {\n    return newsAPI.get(`/users`)\n        .then((res) => {\n        return res.data.users\n        })\n}","import { useContext, useEffect } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { useState } from \"react/cjs/react.development\"\nimport { UserContext } from \"../contexts/User\"\nimport { getUsers } from \"../utils/getUsers\"\n\n\nconst Nav = () => {\n\n    const [users, setUsers] = useState([])\n    const [userInput, setUsersInput] = useState(\"\")\n    const [inputError, setInputError] = useState(false)\n\n    const { setLoggedIn, user, setUser, loggedIn } = useContext(UserContext)\n\n\n    useEffect(()=>{\n        getUsers()\n        .then((res)=>{\n            setUsers(res)\n        })\n    }, [])\n    \n\n    const handleChange = (event) => {\n        const currentUser = event.target.value\n        setUsersInput(currentUser)\n        handleSubmit(event, currentUser)\n      }\n\n    const handleSubmit = (event, currentUser) => {\n        event.preventDefault()\n        setUser(currentUser)\n\n        users.forEach(singleUser => {\n            if(singleUser.username === user) {\n                setUser(singleUser)\n                setLoggedIn(true)\n            } else {\n                setInputError(true)\n            }\n        });\n    }\n\n    // returns navBar with login avatar\n    if(loggedIn) {\n        return (\n            <nav className=\"bar\">\n                <nav className=\"navBar\"> \n                    <img src={user.avatar_url} alt={user.username} className=\"avatarIMG\"/>\n                    <h4 className=\"usernameNav\"> {user.username} </h4>\n                    <h4 className=\"navBarButtons\">\n                    <Link to=\"/\" style={{ textDecoration: 'none', color: 'white' }}>Home</Link> Topics\n                    </h4>\n                </nav>\n            </nav>\n        )\n    }\n\n    // returns navBar with no login \n    return (\n        <nav className=\"bar\">\n            <nav className=\"navBar\"> \n                <form className=\"loginBox\" onSubmit={handleSubmit}>\n                    <label> \n                        <input className={inputError ? 'error' : ''} type=\"text\" value={userInput} style={{ width:\"90px\" }} onChange={handleChange}/>\n                    </label>\n                        <input className=\"loginButton\" type=\"submit\" value=\"Login\"/>\n                </form>\n                <h4 className=\"navBarButtons\">\n                    <Link to=\"/\" style={{ textDecoration: 'none', color: 'white' }}>\n                        {`Home `}\n                    </Link> \n                        {`Topics `}\n                </h4>\n            </nav>\n        </nav>\n    )\n}\n\nexport default Nav\n","import axios from 'axios';\n\nconst newsAPI = axios.create({\n    baseURL: 'https://nc-news-reddit.herokuapp.com/api/',\n})\n\nexport const getArticles = (query, order) => {\n\n    if(order) {\n        return newsAPI.get(`/articles?order=${order}`)\n        .then((res) => {\n        return res.data.articles\n        })\n    }\n\n    if(query !== \"\" && query !== \"Date\") {\n        const queryValue = query.toLowerCase()\n        return newsAPI.get(`/articles?sort_by=${queryValue}`)\n        .then((res) => {\n        return res.data.articles\n        })\n    } else {\n        return newsAPI.get('/articles')\n        .then((res) => {\n        return res.data.articles\n    })\n    }\n\n    \n}\n\nexport const getSingleArticle = (id) => {\n\n        return newsAPI.get(`/articles/${id}`)\n        .then((res) => {\n            return res.data.articles\n        })\n\n}","import { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getArticles } from \"../utils/getArticles\";\n\nconst Home = () => {\n\n    const [sortBy, setSortBy] = useState(\"\")\n    const [articles, setArticles] = useState([])\n    const [order, setOrder] = useState(\"\")\n\n    const handleChange = (e) => {\n        let {value} = e.target;\n        setSortBy(value)\n        setOrder(\"\")\n    }\n\n    useEffect(() => {\n        getArticles(sortBy, order).then((returnedArticles) => {\n            setArticles(returnedArticles)\n        })\n    }, [sortBy, order])\n\n    return (\n    <div>\n        {/* filter box */}\n        <div className=\"filterBy\">\n            Filter:  \n            <select onChange={handleChange}>\n                <option>\n                    Date\n                </option>\n                <option>\n                    Title\n                </option>\n                <option>\n                    Topic\n                </option>\n                <option>\n                    Votes\n                </option>\n                <option>\n                    Comment_count\n                </option>\n                <option>\n                    Author\n                </option>\n            </select>\n            <button className=\"ascButton\" onClick={()=>{\n                setOrder(\"ASC\")     \n            }}> ↑ </button> <button onClick={()=>{\n                setOrder(\"DESC\")\n            }} > ↓ </button>\n        </div>\n        \n        <br></br>\n\n        {/* articles body */}\n        <div className=\"articlesPage\">\n\n            {articles.map((article)=>{\n                return (\n                    <ul className=\"articlesCards\">\n\n                        {/*Header and title for each article card*/}\n                        <li key={article.article_id}> \n                            <Link to={`/articles/${article.article_id}`} style={{ textDecoration: 'none', color: 'white' }}>\n                                <h2 className=\"articleTitle\" key={article.article_id}> \n                                    {article.title}                                         \n                                </h2> \n                            </Link>                           \n                            <Link to={`/topics/${article.topic}`} style={{ textDecoration: 'none', color: 'blue' }} className=\"articleTitle\">\n                                <p>\n                                    {` (${article.topic})`}\n                                </p>  \n                            </Link> \n                        </li>\n\n                        {/*Body of article card*/}\n                        <Link to={`/articles/${article.article_id}`} style={{ textDecoration: 'none', color: 'white' }}>\n                            <li className=\"articleBody\" key={article.body}> \n                                <p key={article.body}> {article.body.slice(0, 200)}... </p>\n                            </li>\n                        </Link>    \n                        \n                        {/*Bottom of article card, includes the author, votes, created_at and the link to comments*/}\n                        <li key={article.created_at}>\n                            <p className=\"articleBottom\" key={article.created_at}>\n                                {`${article.author} `}\n                                Votes:{`${article.votes} `}\n                                {`${article.created_at.slice(0, 10)} `}\n                                <Link to={`/articles/${article.article_id}`} style={{ textDecoration: 'none', color: 'blue' }}>\n                                Comments\n                                </Link>\n                            </p>\n                        </li>   \n                \n                    </ul>          \n                )\n            })}\n        </div>\n    </div>\n    )\n}\n\nexport default Home","const Header = () => {\n    \n    return (\n        <div className=\"mainHeader\">\n            <h1>NC-News</h1>\n        </div>\n    )\n}\n\nexport default Header\n\n","import axios from 'axios';\n\nconst newsAPI = axios.create({\n    baseURL: 'https://nc-news-reddit.herokuapp.com/api/',\n})\n\nexport const getComments = (id) => {\n\n        return newsAPI.get(`/articles/${id}/comments`)\n        .then((res) => {\n            return res.data.comments\n        })\n\n}","import axios from 'axios';\n\nconst newsAPI = axios.create({\n    baseURL: 'https://nc-news-reddit.herokuapp.com/api/',\n})\n\nexport const patchArticleVote = (article, amount) => {\n    \n\n\n    return newsAPI.patch(`/articles/${article}`, { inc_votes: amount })\n        .then((res) => {\n        console.log(\"RETURN\",res)\n      \n        return res.data\n        })\n}","import axios from 'axios';\n\nconst newsAPI = axios.create({\n    baseURL: 'https://nc-news-reddit.herokuapp.com/api/',\n})\n\nexport const postSingleComment = (id, comment) => {\n    console.log(comment)\n    return newsAPI.post(`/articles/${id}/comments`, comment)\n        .then((res) => {\n        console.log(res)\n        return res.data\n        })\n}","import { useEffect } from \"react\"\nimport { useParams } from \"react-router\"\nimport { useContext, useState } from \"react/cjs/react.development\"\nimport { UserContext } from \"../contexts/User\"\nimport { getSingleArticle } from \"../utils/getArticles\"\nimport { getComments } from \"../utils/getComments\"\nimport { patchArticleVote } from \"../utils/patchArticleVotes\"\nimport { postSingleComment } from \"../utils/postComment\"\n\nconst Article = () => {\n\n    const [singleArticle, setSingleArticle] = useState([])\n    const [postComment, setPostComment] = useState(false)\n    const [cancelPost, setCancelPost] = useState(false)\n    const [commentContent, setCommentContent] = useState(\"\")\n    const [userInput, setUsersInput] = useState(\"\")\n    const [comments, setComment] = useState([])\n    const [votes, setVotes] = useState(0)\n\n    let { article_id } = useParams()\n    const { loggedIn, user } = useContext(UserContext)\n\n    const handleChange = (event) => {\n        const comment = event.target.value\n        setUsersInput(comment)\n        handleSubmit(event, comment)\n      }\n\n    const handleSubmit = (event, comment) => {\n        event.preventDefault()\n        setCommentContent(comment)\n    }\n\n    useEffect(() => {\n        getSingleArticle(article_id).then((returnedArticle) => {\n            setSingleArticle(returnedArticle)\n        })\n    }, [article_id])\n\n    useEffect(() => {\n        getComments(article_id).then((comments)=>{\n            setComment(comments)\n        })\n    }, [article_id])\n\n    return (\n    <div>\n        <div key={singleArticle.article_id}>\n            <ul className=\"articlesCards\">\n\n                {/* article title */}\n                <li>\n                    <h2 className=\"articleTitle\" key={singleArticle.title}>  \n                        {singleArticle.title} \n                    </h2>\n                </li>\n\n                {/* article body */}\n                <li>\n                    <p className=\"articleBody\"> {singleArticle.body} </p>\n                </li>\n\n                {/* article bottom (votes, author) */}\n                <li>\n                    <div className=\"articleBottom\">\n                        <h4  className=\"articleBottom\">\n                            {singleArticle.author} Votes:{`${singleArticle.votes + votes} `} \n                        </h4>\n                        {loggedIn ?\n                        <p className=\"upvoteButton\">\n                            <button onClick={()=>{\n                                patchArticleVote(article_id, 1)\n                                setPostComment(false)\n                                setVotes((prevVote)=>{\n                                    const newVote = prevVote\n                                    return newVote+1\n                                })\n                                }}> \n                                    + \n                            </button> \n                        </p> : \"\"}\n\n                        {loggedIn ?\n                        <p className=\"upvoteButton\">\n                            <button onClick={()=>{\n                                patchArticleVote(article_id, -1)\n                                setVotes((prevVote)=>{\n                                const newVote = prevVote\n                                return newVote-1\n                                })}}> \n                                    - \n                            </button> \n                        </p> : \"\"} \n                    </div>\n                </li>\n            </ul>\n            \n            {/* Post a comment box (only renders if logged in) */}\n            {loggedIn ? \n            <div> \n                <button className=\"postCommentButton\" onClick={()=>{\n                    setPostComment(true)\n                    setCancelPost(true)\n                    }}>\n                        Post a comment \n                </button>\n\n            {/* Button to cancel post (only appears if post box has been opened) */}\n                {cancelPost ? \n                    <button onClick={()=>{\n                        setPostComment(false)\n                        setCancelPost(false)\n                        }}>\n                            X \n                    </button> : \"\"}\n                </div> \n                    : \n                <p> Please log in to post a comment. </p>}  \n\n\n             {/* If postcomment is true, re-renders to display a text area in which user can post comment */}\n                {postComment ? \n                <form onSubmit={handleSubmit}>\n                    <label> \n                        <textarea className=\"commentPost\" type=\"text\" value={userInput} onChange={handleChange}/>\n                    </label>\n\n                    \n                {/* Post comment button that resets the state to close the comment box and sends a post request. Temporarliy updates state of comments to show comment when posted. */}\n                    <input className=\"loginButton\" type=\"submit\" value=\"Send\" onClick={()=>{\n                        postSingleComment(article_id, {username: user.username, body: commentContent})\n                        setPostComment(false)\n                        setCancelPost(false)\n                        setComment((prevValue)=>{\n                            const newComments = [...prevValue]\n                            newComments.unshift({author: user.username, body: commentContent, votes: 0, created_at: \"Just now..\", comment_id: 500})\n                            return newComments\n                        })\n                    }}/> \n                </form>\n                : \"\"}         \n            </div>\n        \n        <div>\n            {comments.map((comment)=>{\n                return (\n                    <div className=\"commentCard\" key={comment.comment_id}>\n                    <h3 className=\"commentAuthor\"> {comment.author} </h3>\n                    <p className=\"commentBody\"> {comment.body} </p>\n                    <p className=\"votesComment\"> {comment.created_at.slice(0,10)}</p>   \n                    </div>\n                )\n            })}\n        \n        </div>\n    </div>\n    )\n}\n\nexport default Article","import axios from 'axios';\n\nconst newsAPI = axios.create({\n    baseURL: 'https://nc-news-reddit.herokuapp.com/api/',\n})\n\nexport const getTopics = (topic) => {\n\n        return newsAPI.get(`/articles?topic=${topic}`)\n        .then((res) => {\n            console.log(res)\n            return res.data.articles\n        })\n\n}","import { useParams } from \"react-router\"\nimport { Link } from \"react-router-dom\"\nimport { useEffect, useState } from \"react/cjs/react.development\"\nimport { getTopics } from \"../utils/getTopic\"\n\nconst Topics = () => {\n\n    const filter = useParams()\n    \n    const [topics, setTopics] = useState([])\n\n    useEffect(()=>{\n        getTopics(filter.topic).then((response)=>{\n            console.log(response)\n            setTopics(response)\n        })\n    }, [filter.topic])\n\n    return (\n        <div>{topics.map((topic)=>{\n            return (\n                <div key={topic.article_id}>\n                    <Link to={`/articles/${topic.article_id}`}>\n                        {topic.title}\n                    </Link>  \n                </div>\n            )\n           \n        })}</div>\n    )\n}\n\nexport default Topics","import './App.css';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom'\nimport Nav from './components/Nav';\nimport Home from './components/Home';\nimport Header from './components/Header';\nimport { UserProvider } from './contexts/User';\nimport Article from './components/Article';\nimport Topics from './components/Topics';\n\nfunction App() {\n\n  return (\n    <UserProvider>\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <div className=\"App\">\n        <Nav />\n        <Header />\n        <Routes>\n          <Route path='/' element={<Home/>}/>\n          <Route path='/articles/:article_id' element={<Article/>}/>\n          <Route path='/topics/:topic' element={<Topics/>}/>\n        </Routes>\n      </div>\n      </BrowserRouter>\n    </UserProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}